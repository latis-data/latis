# LaTiS properties

version = test

# Location of the TSML files.
dataset.dir = datasets/test

# Define log file if you want to be able to serve it via the "log" dataset.
# This will be used by the logging config logback.xml.
#log.file = /data/latis/log/latis.log

test.parameterized.value = ${user.dir}/build.sbt

#For TestTimeZone
#time.zone = America/Denver

#---- Define Writers ----------------------------------------------------------
writer.asc.class = latis.writer.AsciiWriter
writer.asc.description = ASCII representation reflecting how the dataset is modeled.

writer.txt.class = latis.writer.TextWriter
writer.txt.delimiter = , 
writer.txt.fill_value =

writer.tab.class = latis.writer.TextWriter
writer.tab.delimiter = \t

writer.bin.class = latis.writer.BinaryWriter
writer.bin.description = IEEE 64-bit floats, little-endian

writer.csv.class = latis.writer.CsvWriter
writer.csv.delimiter = ,
writer.csv.description = ASCII comma separated values

writer.json.class = latis.writer.JsonWriter
writer.json.description = JavaScript Object Notation (JSON), ASCII

writer.meta.class = latis.writer.MetadataWriter

writer.jsona.class = latis.writer.CompactJsonWriter
writer.jsona.description = Compact version of .json output (ASCII)

writer.jsond.class = latis.writer.JsonMetadataAndDataWriter
writer.jsond.description = Data and metadata, both formatted as JSON (ASCII)

writer.dds.class = latis.writer.DdsWriter
writer.dds.description = Standard OPeNDAP Dataset Descriptor Structure (DDS), ASCII

writer.das.class = latis.writer.DasWriter
writer.das.description = Standard OPeNDAP Dataset Attribute Structure (DAS), ASCII

writer.dods.class = latis.writer.DodsWriter
writer.dods.description = Standard OPeNDAP data output as defined by the Data Access Protocol (DAP), binary

writer.html.class = latis.writer.HtmlWriter

writer.proto.class = latis.writer.ProtoWriter
writer.protod.class = latis.writer.ProtoBufWriter

writer.zip.class = latis.writer.ZipWriter


#---- Define Operations -------------------------------------------------------
operation.first.class = latis.ops.filter.FirstFilter
operation.first.description = return only the first sample

operation.last.class = latis.ops.filter.LastFilter
operation.last.description = return only the last sample

operation.limit.class = latis.ops.filter.TakeOperation
operation.limit.description = return the first n samples

operation.take.class = latis.ops.filter.TakeOperation
operation.take.description = return the first n samples

operation.takeright.class = latis.ops.filter.TakeRightOperation
operation.takeright.description = return the rightmost n samples

operation.drop.class = latis.ops.DropOperation
operation.drop.description = return all but the first n samples

operation.stride.class = latis.ops.filter.StrideFilter
operation.stride.description = stride(n), return every nth time sample

operation.binave.class = latis.ops.BinAverage
operation.binave.description = Consolidate the data by binning (by a given width) and averaging the values in each bin.
operation.binave.usage = binave(width)

operation.integrate.class = latis.ops.Integrate
#operation.integrate.description = 

operation.convert.class = latis.ops.UnitConversion
#operation.convert.description = 

operation.format_time.class = latis.ops.TimeFormatter
#operation.format_time.description = 

operation.rename.class = latis.ops.RenameOperation
#operation.rename.description = 

operation.exclude_missing.class = latis.ops.filter.ExcludeMissing
#operation.exclude_missing.description =

operation.convertTimeTupleToTime.class = latis.ops.TimeTupleToTime

operation.derived.class = latis.ops.MathExpressionDerivation

operation.pivot.class = latis.ops.Pivot

operation.domBin.class = latis.ops.DomainBinner

operation.maxDelta.class = latis.ops.filter.MaxDeltaFilter

operation.roundWithPrecision.class = latis.ops.roundWithPrecision

operation.roundWithSigfigs.class = latis.ops.roundWithSigfigs

operation.select.class = latis.ops.filter.Selection
operation.project.class = latis.ops.Projection

operation.validateUrls.class = latis.ops.UrlValidator

#---- Define Readers ----------------------------------------------------------
reader.cache.class = latis.reader.CacheAccessor


# For testing only, maintain white space below
test.name = George
test.name.with.space = George 
test.name.without.nl = George
